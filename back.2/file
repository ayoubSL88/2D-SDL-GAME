#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <SDL/SDL.h>
#include <SDL/SDL_image.h>

#define LARGEUR_ECRAN 1400
#define HAUTEUR_ECRAN 700
#define LARGEUR_IMAGE_BACKGROUND 3192
#define LARGEUR_JOUEUR 50
#define HAUTEUR_JOUEUR 50
#define VITESSE_JOUEUR_X 13 // Vitesse de déplacement horizontal du joueur
#define VITESSE_JOUEUR_Y 13 // Vitesse de déplacement vertical du joueur
#define VITESSE_DEFILEMENT_X 5 // Vitesse de défilement horizontal de l'image
#define VITESSE_DEFILEMENT_Y 5 // Vitesse de défilement vertical de l'image
#define VITESSE_SAUT 200 // Vitesse de saut du joueur (increased for higher jump)
#define GRAVITE 10 // Gravité appliquée au joueur
#define ZOOM_FACTOR 1 // Facteur de zoom
#define NB_TOUCHES 4 // Nombre total de touches utilisées

// Structure pour représenter un joueur
typedef struct {
    int x, y, w, h;
    int score;
    int vies;
    SDL_Surface *images; // Pour les images d'animation du joueur
} Joueur;

// Structure pour représenter le background
typedef struct {
    SDL_Surface *surface;
    SDL_Rect camera1; // Pour le premier joueur
    SDL_Rect camera2; // Pour le deuxième joueur
} Background;

SDL_Surface *screen = NULL;
SDL_Surface *background = NULL;
SDL_Surface *elements = NULL;
SDL_Surface *sunImages[4];
SDL_Rect sunPos;

// Déclarations des fonctions
void chargerImagesJoueur(const char *cheminImages, SDL_Surface **images);
void updateJoueur(Joueur *joueur);
void scrolling(Background *background, Joueur *joueur);

// Fonction pour initialiser le joueur 2
void initialiserJoueur2(Joueur *joueur, const char *cheminImages) {
    joueur->x = 100; // Exemple de position initiale
    joueur->y = 500;
    joueur->score = 0;
    joueur->vies = 3;
    chargerImagesJoueur(cheminImages, &(joueur->images));
}

// Fonction pour initialiser le background
void initialiserBackground(Background *background) {
    background->surface = IMG_Load("img1.png");
    if (!background->surface) {
        fprintf(stderr, "Failed to load background image: %s\n", IMG_GetError());
        SDL_Quit();
        exit(1);
    }
    // Initialiser les positions de camera pour le premier et le deuxième joueur
    background->camera1.x = 0;
    background->camera1.y = 0;
    background->camera1.w = LARGEUR_ECRAN / 2; // Moitié de la largeur de l'écran
    background->camera1.h = HAUTEUR_ECRAN;

    background->camera2.x = LARGEUR_ECRAN / 2; // Deuxième moitié de la largeur de l'écran
    background->camera2.y = 0;
    background->camera2.w = LARGEUR_ECRAN / 2;
    background->camera2.h = HAUTEUR_ECRAN;
}

// Fonction pour charger les images du joueur
void chargerImagesJoueur(const char *cheminImages, SDL_Surface **images) {
    // Code pour charger les images du joueur à partir du chemin spécifié
    // Assurez-vous d'assigner les surfaces d'images chargées à la variable images
}

// Fonction pour mettre à jour la position du joueur
void updateJoueur(Joueur *joueur) {
    // Code pour mettre à jour la position du joueur en fonction de la logique du jeu
}

// Fonction pour mettre à jour le défilement du fond d'écran
void scrolling(Background *background, Joueur *joueur) {
    // Code pour mettre à jour le défilement du fond d'écran en fonction du mouvement du joueur
}

// Fonction pour afficher le background
void afficherBackground(Background *background) {
    // Afficher le background pour le premier joueur
    SDL_BlitSurface(background->surface, &(background->camera1), screen, NULL);
    // Afficher le background pour le deuxième joueur
    SDL_BlitSurface(background->surface, &(background->camera2), screen, NULL);
}

// Fonction pour afficher un joueur
void afficherJoueur(Joueur *joueur) {
    // Afficher le joueur sur l'écran
    SDL_Rect destRect = {joueur->x, joueur->y, joueur->w, joueur->h};
    SDL_BlitSurface(joueur->images, NULL, screen, &destRect);
}

// Fonction pour mettre à jour la position des joueurs et du background
void update(Background *background, Joueur *joueur1, Joueur *joueur2) {
    // Mettre à jour la position des joueurs
    // (Vous devez implémenter la fonction updateJoueur en fonction de votre logique)
    updateJoueur(joueur1);
    updateJoueur(joueur2);

    // Mettre à jour la position des backgrounds en fonction du déplacement des joueurs
    scrolling(background, joueur1);
    scrolling(background, joueur2);
}

int main() {
    int continuer = 1;
    Joueur joueur1;
    Joueur joueur2;
    Background background;

    if (SDL_Init(SDL_INIT_VIDEO) != 0) {
        printf("Erreur lors de l'initialisation de SDL : %s\n", SDL_GetError());
        return 1;
    }

    screen = SDL_SetVideoMode(LARGEUR_ECRAN, HAUTEUR_ECRAN, 32, SDL_HWSURFACE | SDL_DOUBLEBUF);
    if (!screen) {
        printf("Erreur lors de la création de la fenêtre : %s\n", SDL_GetError());
        SDL_Quit();
        return 1;
    }

    initialiserBackground(&background);
    initialiserJoueur2(&joueur2, "chemin_images_joueur2/");

    while (continuer) {
        SDL_Event event;
        while (SDL_PollEvent(&event)) {
            switch (event.type) {
                case SDL_QUIT:
                    continuer = 0;
                    break;
                case SDL_KEYDOWN:
                    // Gérer les événements de touche pressée
                    break;
                case SDL_KEYUP:
                    // Gérer les événements de touche relâchée
                    break;
            }
        }

        update(&background, &joueur1, &joueur2);

        // Effacer l'écran
        SDL_FillRect(screen, NULL, SDL_MapRGB(screen->format, 0, 0, 0));

        // Afficher le background
        afficherBackground(&background);

        // Afficher les joueurs
        afficherJoueur(&joueur1);
        afficherJoueur(&joueur2);

        // Mettre à jour l'écran
        SDL_Flip(screen);
    }

    SDL_Quit();
    return 0;
}

